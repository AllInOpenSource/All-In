{"version":3,"sources":["../src/src/timeline/timeline-item.scss","../src/src/support/variables/layout.scss"],"names":[],"mappings":"AAAA,cACE,iBAAkB,CAClB,YAAa,CACb,cAAoB,CACpB,gBCiCoB,CDrCtB,sBAQI,iBAAkB,CAClB,KAAM,CACN,QAAS,CACT,MAAO,CACP,aAAc,CACd,SAAU,CACV,UAAW,CAEX,8CAA+C,CAhBnD,yCAoBI,sDAAuD,CACvD,8DAA+D,CAChE,oBAID,iBAAkB,CAClB,SAAU,CACV,YAAa,CACb,UCUoB,CDTpB,WCSoB,CDRpB,gBCAU,CDCV,iBAA2B,CAE3B,iCAAkC,CAClC,kBAAmB,CACnB,+CAAgD,CAEhD,uCAAgD,CAChD,iBAAkB,CAClB,sBAAuB,CACvB,aAAc,CAEd,6BACE,6BAA8B,CAC9B,4CAA6C,CAC7C,2DAA8E,CAC/E,mBAID,WAAY,CACZ,cAAe,CACf,cClB2B,CDmB3B,gCAAiC,CACjC,SAAU,CACX,qBAGC,iBAAkB,CAClB,UAA6B,CAC7B,SAAU,CACX,oBAGC,iBAAkB,CAClB,SAAU,CACV,WC7BoB,CD8BpB,QAAS,CACT,mBChCoB,CDkCpB,iBAAoC,CACpC,uCAAwC,CACxC,QAAS,CAET,gDAAyD,CAC1D,yBAGC,eC5C2B,CD6C3B,gBAAiB,CAFnB,oCAMI,mBC/CkB,CDyCtB,6CAUI,WCnDkB,CDoDlB,cC1DQ,CD2DR,iBC3DQ,CD6DR,iCAAkC,CAClC,uCAAwC,CACxC,QAAS","file":"timeline.css","sourcesContent":[".TimelineItem {\n  position: relative;\n  display: flex;\n  padding: $spacer-3 0;\n  margin-left: $spacer-3;\n\n  // The Timeline\n  &::before {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    width: 2px;\n    content: \"\";\n    // stylelint-disable-next-line primer/colors\n    background-color: var(--color-border-secondary);\n  }\n\n  &:target .TimelineItem-badge {\n    border-color: var(--color-timeline-target-badge-border);\n    box-shadow: 0 0 0.2em var(--color-timeline-target-badge-shadow);\n  }\n}\n\n.TimelineItem-badge {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  width: $spacer-5;\n  height: $spacer-5;\n  margin-right: $spacer-2;\n  margin-left: -$spacer-3 + 1;\n  // stylelint-disable-next-line primer/colors\n  color: var(--color-icon-secondary);\n  align-items: center;\n  background-color: var(--color-timeline-badge-bg);\n  // stylelint-disable-next-line primer/borders\n  border: 2px $border-style var(--color-bg-canvas);\n  border-radius: 50%;\n  justify-content: center;\n  flex-shrink: 0;\n\n  &--success {\n    color: var(--color-text-white);\n    background-color: var(--color-btn-primary-bg);\n    border: $border-width $border-style var(--color-timeline-badge-success-border);\n  }\n}\n\n.TimelineItem-body {\n  min-width: 0;\n  max-width: 100%;\n  margin-top: $spacer-1;\n  color: var(--color-timeline-text);\n  flex: auto;\n}\n\n.TimelineItem-avatar {\n  position: absolute;\n  left: -($spacer-6 + $spacer-5);\n  z-index: 1;\n}\n\n.TimelineItem-break {\n  position: relative;\n  z-index: 1;\n  height: $spacer-4;\n  margin: 0;\n  margin-bottom: -$spacer-3;\n  // stylelint-disable-next-line primer/spacing\n  margin-left: -($spacer-6 + $spacer-3);\n  background-color: var(--color-bg-canvas);\n  border: 0;\n  // stylelint-disable-next-line primer/borders\n  border-top: 4px $border-style var(--color-border-primary);\n}\n\n.TimelineItem--condensed {\n  padding-top: $spacer-1;\n  padding-bottom: 0;\n\n  // TimelineItem--condensed is often grouped. (commits)\n  &:last-child {\n    padding-bottom: $spacer-3;\n  }\n\n  .TimelineItem-badge {\n    height: $spacer-3;\n    margin-top: $spacer-2;\n    margin-bottom: $spacer-2;\n    // stylelint-disable-next-line primer/colors\n    color: var(--color-icon-secondary);\n    background-color: var(--color-bg-canvas);\n    border: 0;\n  }\n}\n","// Layout variables\n\n// these are values for the display CSS property\n$display-values: (\n  block,\n  flex,\n  inline,\n  inline-block,\n  inline-flex,\n  none,\n  table,\n  table-cell\n) !default;\n\n// maps edges to respective corners for border-radius\n$edges: (\n  top: (top-left, top-right),\n  right: (top-right, bottom-right),\n  bottom: (bottom-right, bottom-left),\n  left: (bottom-left, top-left)\n) !default;\n\n// These are our margin and padding utility spacers. The default step size we\n// use is 8px. This gives us a key of:\n//    0 => 0px\n//    1 => 4px\n//    2 => 8px\n//    3 => 16px\n//    4 => 24px\n//    5 => 32px\n//    6 => 40px\n$spacer: 8px !default;\n\n// Our spacing scale\n$spacer-0: 0 !default;                  // 0\n$spacer-1: round($spacer / 2) !default; // 4px\n$spacer-2: $spacer !default;            // 8px\n$spacer-3: $spacer * 2 !default;        // 16px\n$spacer-4: $spacer * 3 !default;        // 24px\n$spacer-5: $spacer * 4 !default;        // 32px\n$spacer-6: $spacer * 5 !default;        // 40px\n\n// The list of spacer values\n$spacers: (\n  $spacer-0,\n  $spacer-1,\n  $spacer-2,\n  $spacer-3,\n  $spacer-4,\n  $spacer-5,\n  $spacer-6,\n) !default;\n\n// And the map of spacers, for easier looping:\n// @each $scale, $length in $spacer-map { ... }\n$spacer-map: (\n  0: $spacer-0,\n  1: $spacer-1,\n  2: $spacer-2,\n  3: $spacer-3,\n  4: $spacer-4,\n  5: $spacer-5,\n  6: $spacer-6,\n) !default;\n\n// Em spacer variables\n$em-spacer-1: 0.0625em !default; // 1/16\n$em-spacer-2: 0.125em !default;  // 1/8\n$em-spacer-3: 0.25em !default;   // 1/4\n$em-spacer-4: 0.375em !default;  // 3/8\n$em-spacer-5: 0.5em !default;    // 1/2\n$em-spacer-6: 0.75em !default;   // 3/4\n\n// Size scale\n// Used for buttons, inputs, labels, avatars etc.\n$size: 16px !default;\n\n$size-0: 0 !default;\n$size-1: $size !default;           // 16px\n$size-2: $size-1 +  4px !default;  // 20px\n$size-3: $size-2 +  4px !default;  // 24px\n$size-4: $size-3 +  4px !default;  // 28px\n$size-5: $size-4 +  4px !default;  // 32px\n$size-6: $size-5 +  8px !default;  // 40px\n$size-7: $size-6 +  8px !default;  // 48px\n$size-8: $size-7 + 16px !default;  // 64px\n\n// Fixed-width container variables\n$container-width: 980px !default;\n$grid-gutter:     10px !default;\n\n// Breakpoint widths\n$width-xs: 0 !default;\n// Small screen / phone\n$width-sm: 544px !default;\n// Medium screen / tablet\n$width-md: 768px !default;\n// Large screen / desktop (980 + (16 * 2)) <= container + gutters\n$width-lg: 1012px !default;\n// Extra large screen / wide desktop\n$width-xl: 1280px !default;\n\n// Responsive container widths\n$container-sm: $width-sm !default;\n$container-md: $width-md !default;\n$container-lg: $width-lg !default;\n$container-xl: $width-xl !default;\n\n// Breakpoints in the form (name: length)\n$breakpoints: (\n  sm: $width-sm,\n  md: $width-md,\n  lg: $width-lg,\n  xl: $width-xl\n) !default;\n\n// This map in the form (breakpoint: variant) is used to iterate over\n// breakpoints and create both responsive and non-responsive classes in one\n// loop:\n//\n// ```scss\n// @each $breakpoint, $variant of $responsive-variants {\n//   @include breakpoint($breakpoint) {\n//     .foo#{$variant}-bar { foo: bar !important; }\n//   }\n// }\n// ```\n$responsive-variants: (\n  \"\": \"\",\n  sm: \"-sm\",\n  md: \"-md\",\n  lg: \"-lg\",\n  xl: \"-xl\",\n) !default;\n\n// responive utility position values\n$responsive-positions: (\n  static,\n  relative,\n  absolute,\n  fixed,\n  sticky\n) !default;\n"]}